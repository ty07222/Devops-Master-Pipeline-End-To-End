pipeline {
    agent any
    stages {
        stage('Git') {
            steps {
                git url: 'https://github.com/ty07222/Devops-Master-Pipeline-End-To-End.git', branch: 'main'
                echo 'Git repository cloned successfully'
            }
        }
        stage('Setup Ansible') {
            steps {
                sh 'ansible --version'
                echo 'Ansible is ready'
            }
        }
        stage('Setup Terraform') {
            steps {
                script {
                    if (!fileExists('terraform_1.6.0_linux_amd64.zip')) {
                        sh 'wget https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip'
                        sh 'unzip terraform_1.6.0_linux_amd64.zip'
                        sh 'mv terraform /usr/local/bin/'
                    } else {
                        echo 'Terraform zip file already exists. Skipping download.'
                    }
                }
                sh 'terraform --version'
                echo 'Terraform is ready'
            }
        }
        stage('Create Infrastructure for PROD') {
            steps {
                dir('deploy/terraformscripts') {
                    withCredentials([usernamePassword(credentialsId: 'alicloud-access', usernameVariable: 'ACCESS_KEY', passwordVariable: 'SECRET_KEY')]) {
                        sh 'terraform init'
                        sh 'terraform apply -auto-approve -var "access_key=$ACCESS_KEY" -var "secret_key=$SECRET_KEY"'
                    }
                }
                sh 'sleep 30' // 等待基础设施就绪
                sh 'cp ./deploy/terraformscripts/inventory ./deploy/playbooks/inventory'
                echo 'Infrastructure is up and running'
            }
        }
        stage('Configure k8s cluster on the created infrastructure') {
            environment {
                ANSIBLE_DIR = './deploy/playbooks'
            }
            steps {
                dir("${ANSIBLE_DIR}") {
                    sh 'chmod 400 mykey'
                    sh 'ansible-playbook rhel_common.yaml'
                    sh 'ansible-playbook rhel_master.yaml'
                    echo 'K8s multi-node cluster configured successfully'
                }
            }
        }
        stage('Configure Monitoring Tool') {
            environment {
                ANSIBLE_DIR = './deploy/playbooks'
            }
            steps {
                dir("${ANSIBLE_DIR}") {
                    sh 'ansible-playbook prometheus-grafana.yml'
                    echo 'Monitoring tool configured successfully'
                }
            }
        }
        stage('Deploy the Webserver') {
            environment {
                ANSIBLE_DIR = './deploy/playbooks'
            }
            steps {
                dir("${ANSIBLE_DIR}") {
                    sh 'ansible-playbook deployDeployment.yml'
                    echo 'Webserver deployed successfully'
                }
            }
        }
    }
}
